<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="..\..\..\Common\Model.cs" %>
<%@ Assembly Src="..\..\..\Common\Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="EntityContext" Type="SchemaMapper.EntityContext"  %>
<%@ Property Name="Entity" Type="SchemaMapper.Entity"  %>
<%@ Property Name="Namespace" Type="System.String" %>
<%-- Safe类名 --%>
<% string SafeClassName = Entity.ClassName.ToSafeName(); %>
<%-- 描述 --%>
<% string Description = Entity.Description; %>
<%-- 驼峰形式类名 --%>
<% string CamelClassName = SafeClassName.ToCamelCase(); %>
import { NgModule } from '@angular/core';
import { FrameworkModule } from '../framework.module';
import { <%=Entity.TableSchema.ToSingular()%>RoutingModule } from './<%=Entity.TableSchema.ToSingular().ToCamelCase()%>-routing.module';
<% foreach(Entity entity in EntityContext.Entities) {%>
import { <%= entity.ClassName.ToSafeName() %>ListComponent } from './<%= entity.ClassName.ToSafeName().ToCamelCase() %>/<%= entity.ClassName.ToSafeName().ToCamelCase() %>-list.component';
import { <%= entity.ClassName.ToSafeName() %>EditComponent } from './<%= entity.ClassName.ToSafeName().ToCamelCase() %>/<%= entity.ClassName.ToSafeName().ToCamelCase() %>-edit.component';
import { <%= entity.ClassName.ToSafeName() %>DetailComponent } from './<%= entity.ClassName.ToSafeName().ToCamelCase() %>/<%= entity.ClassName.ToSafeName().ToCamelCase() %>-detail.component';
<%} %>

/**
 * <%=Namespace%>模块
 */
@NgModule({
    declarations: [
        <% foreach(Entity entity in EntityContext.Entities) {%>
        <%= entity.ClassName.ToSafeName() %>ListComponent,<%= entity.ClassName.ToSafeName() %>EditComponent,<%= entity.ClassName.ToSafeName() %>DetailComponent,
        <%} %>
    ],
    imports: [
        FrameworkModule,<%=Entity.TableSchema.ToSingular()%>RoutingModule
    ]
})
export class <%=Entity.TableSchema.ToSingular()%>Module {
}